//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.HostClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HostClient.IServiceCloud")]
    public interface IServiceCloud {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/UploadFile", ReplyAction="http://tempuri.org/IServiceCloud/UploadFileResponse")]
        void UploadFile(MyCloud.Model.CloudFile cloudFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/UploadFile", ReplyAction="http://tempuri.org/IServiceCloud/UploadFileResponse")]
        System.Threading.Tasks.Task UploadFileAsync(MyCloud.Model.CloudFile cloudFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/DeleteFile", ReplyAction="http://tempuri.org/IServiceCloud/DeleteFileResponse")]
        void DeleteFile(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/DeleteFile", ReplyAction="http://tempuri.org/IServiceCloud/DeleteFileResponse")]
        System.Threading.Tasks.Task DeleteFileAsync(int fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/FilesList", ReplyAction="http://tempuri.org/IServiceCloud/FilesListResponse")]
        MyCloud.Model.CloudFile[] FilesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/FilesList", ReplyAction="http://tempuri.org/IServiceCloud/FilesListResponse")]
        System.Threading.Tasks.Task<MyCloud.Model.CloudFile[]> FilesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/FilesArray", ReplyAction="http://tempuri.org/IServiceCloud/FilesArrayResponse")]
        MyCloud.Model.CloudFile[] FilesArray();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCloud/FilesArray", ReplyAction="http://tempuri.org/IServiceCloud/FilesArrayResponse")]
        System.Threading.Tasks.Task<MyCloud.Model.CloudFile[]> FilesArrayAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCloudChannel : Client.HostClient.IServiceCloud, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCloudClient : System.ServiceModel.ClientBase<Client.HostClient.IServiceCloud>, Client.HostClient.IServiceCloud {
        
        public ServiceCloudClient() {
        }
        
        public ServiceCloudClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCloudClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCloudClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCloudClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UploadFile(MyCloud.Model.CloudFile cloudFile) {
            base.Channel.UploadFile(cloudFile);
        }
        
        public System.Threading.Tasks.Task UploadFileAsync(MyCloud.Model.CloudFile cloudFile) {
            return base.Channel.UploadFileAsync(cloudFile);
        }
        
        public void DeleteFile(int fileId) {
            base.Channel.DeleteFile(fileId);
        }
        
        public System.Threading.Tasks.Task DeleteFileAsync(int fileId) {
            return base.Channel.DeleteFileAsync(fileId);
        }
        
        public MyCloud.Model.CloudFile[] FilesList() {
            return base.Channel.FilesList();
        }
        
        public System.Threading.Tasks.Task<MyCloud.Model.CloudFile[]> FilesListAsync() {
            return base.Channel.FilesListAsync();
        }
        
        public MyCloud.Model.CloudFile[] FilesArray() {
            return base.Channel.FilesArray();
        }
        
        public System.Threading.Tasks.Task<MyCloud.Model.CloudFile[]> FilesArrayAsync() {
            return base.Channel.FilesArrayAsync();
        }
    }
}
